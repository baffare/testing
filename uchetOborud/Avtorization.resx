<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADEAAAAxCAYAAABznEEcAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAPGSURBVGhD1VhbcSMxEAyEQDAEE7iqQAiEQDAEQwiDCwRD
        CIRACIRj4Ove0mz1jlqSs9kffXRl1TMjjTQPyXm63+/Tw5KzwZKzwZKzwZKzwZJH4u/Tn3fHHwlLHgVs
        4Bm4AycnPwqWPApw/rVs4s3Jj4IljwAcfwG+yib4lxt6drq/hSX3AA6ei7N0eoRP4OLm2QNL7gUcYw1c
        i5MfgDrOcfCH1ogljwKcfQe4gauTHwVLPgI4xpyP0/0GmEr8puOvRYfjJX3KmHVBOXnq0y6is9jsgSV7
        wGKnsrCmigMd7I0dOO+PU60iMMkbcCuTZvD0/iWOuheAkSH43bLPuhEZnZPfrkGQp33VrtV5FuUjJxyg
        brNlQlYVttMjIOParY07bNbWSfLu6cSLLBRFSnwF70A70VV0UwVy9WF9ruCb7TsfCnWXjYSSOkhsQoZx
        dmrkTOtUm9EgIGe9qf56iEXOVFf5slFnWF1C4DTNlk7TAuR5PsW3s1FAR6NRrQWONaVznjLpjLJT3Z4P
        eT6tjLOzC0DOy1L1q6iD00O9kNBcqyofXDzimjoKyHPuZnSf5pAP1yMn8g8Suquq24DLJ9O9lCDX+RxG
        6ZgjWUUenGbHJ4m1CLMyAT5vYpROqusw2sRD64n8lo1cJHJ4Rx1GdR1Gm8idrYo8uPixRVxJsAf3DHJh
        dzsM5PlGzxhtIj9PXGHrwZ6zoV0AfL4Imx0Gst01AVk+MHupgo9oLQcapBbT5oIp8tybmx0GstEmerZ5
        HXdn6cW7dC4VRjSq3YNjDmqaNJ8dkOXCzGj+ooNMI871XI2GzprWKtQduraWnbNPD/Cjy66KdLEbXqrk
        RL7Ok5X0DbXJe4xzNOyJgtdG4VCdbrHTVKqigLHOu0nJ9SMAhQhXVYDg9CR6KdXqUM3OBpmmkotC1Br1
        NhvcKBJQ4I7DiU3LpXHhA62Uar1ibw19nddFIaJEWdUZN4MAFKMPVycHTt9GrZTKXWakv3kLJZmmsX23
        VUSAkzlDjLUAWyfbqgt7v4DXyG2ii3HUafOlYEkCRnECLrzrXaC8otiFY0SvHkLXtXfK2P5tQyAsGYBh
        hDmHWMNvX7W0EZ1qDtFrdh2MI627z39LBmCcf5YyAoSGnyfFrsUFqR/I9wrHKudBkNOIsfNwfu1UhL1b
        ApYM0Fgm6v3faE0vg54dkR0O6Jy/2kS0Pk6oG1JQ1ipkboCNINdHgJHIESNop61+/yYImaiHns4j9iN0
        f5dbcjZYcjZYcjZYcjZYcjZYcjZYcjZYcjZYci7cn/4Do+reH06mmdsAAAAASUVORK5CYII=
</value>
  </data>
</root>